// see Chaos2D.txt for the main explanation
// press any key to export the image

int discardIters = 100, detail = 1000;
double x1 = -2, x2 = 2, y1 = -2, y2 = 2;
double X1 = -2, X2 = 2, Y1 = -2, Y2 = 2;
double a = 1.4, b = 0.3;

class Point {
  double x, y, x0, y0;

  Point(int i) {
    x = (double)(i % detail) / detail;
    y = (double)(i / detail) / detail;

    x = x * (x2 - x1) + x1;
    y = y * (y2 - y1) + y1;
    
    x0 = x;
    y0 = y;
  }

  void iter() {
    double $x = x, $y = y;
    
    x = 1 - a * $x * $x + $y;
    y = b * $x;
  }
}

Point[] p = new Point[detail * detail];
float axisOffset;

void setup() {
  size(600, 600);
  axisOffset = width * 0.1;
  textAlign(CENTER, CENTER);
  fill(0);
  textSize(axisOffset / 2);
  
  drawAxis();

  for (int i = 0; i < detail * detail; i++) {
    p[i] = new Point(i);
  }

  for (int i = 0; i < discardIters; i++) {
    for (int j = 0; j < detail * detail; j++) {
      p[j].iter();
    }
  }
  
  for (int j = 0; j < detail * detail; j++) {
    if (abs((float)p[j].x) < 10 || abs((float)p[j].y) < 10) {
      point((float)((p[j].x0 - X1) / (X2 - X1) * (width - 2 * axisOffset) + axisOffset),
      (float)((1 - (p[j].y0 - Y1) / (Y2 - Y1)) * (height - 2 * axisOffset) + axisOffset));
    }
  }
}

void drawAxis() {
  background(255);
  strokeWeight(2);

  line(axisOffset, height - axisOffset, width - axisOffset, height - axisOffset);
  line(axisOffset, axisOffset, axisOffset, height - axisOffset);
  line(width / 2, height - axisOffset, width / 2, height - axisOffset * 3 / 2);
  line(width - axisOffset, height - axisOffset, width - axisOffset, height - axisOffset * 3 / 2);
  line(axisOffset, height / 2, axisOffset * 3 / 2, height / 2);
  line(axisOffset, axisOffset, axisOffset * 3 / 2, axisOffset);

  axisFormat(X1, axisOffset, height - axisOffset / 2 - axisOffset / 16);
  axisFormat((X1 + X2) / 2, width / 2, height - axisOffset / 2 - axisOffset / 16);
  axisFormat(X2, width - axisOffset, height - axisOffset / 2 - axisOffset / 16);

  axisFormat(Y1, axisOffset / 2, height - axisOffset - axisOffset / 16);
  axisFormat((Y1 + Y2) / 2, axisOffset / 2, height / 2 - axisOffset / 16);
  axisFormat(Y2, axisOffset / 2, axisOffset - axisOffset / 16);

  strokeWeight(1);
}

void axisFormat(double val, float x, float y) {
  if ((int)val == val)
    text((int)val, x, y);
  else
    text(str((float)val), x, y);
}

void keyPressed() {
  if (key == ' ')
    save("img.png");
}

void draw() {
}
